{"metadata":{"language_info":{"name":"python","version":"3.7.10","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-12-02T13:42:41.510318Z\",\"iopub.execute_input\":\"2021-12-02T13:42:41.510664Z\",\"iopub.status.idle\":\"2021-12-02T13:42:41.515091Z\",\"shell.execute_reply.started\":\"2021-12-02T13:42:41.510627Z\",\"shell.execute_reply\":\"2021-12-02T13:42:41.51426Z\"}}\n# 라이브러리\n\nimport pandas as pd\n\n# %% [markdown]\n# ## 1. 첫번째 데이터 부터 순서대로 50:50으로 데이터를 나누고, \n#앞에서 부터 50%의 데이터(이하, A그룹)는 'f1'컬럼을 A그룹의 중앙값으로 채우고, \n#뒤에서부터 50% 데이터(이하, B그룹)는 'f1'컬럼을 B그룹의 최대값으로 채운 후, A그룹과 B그룹의 표준편차 합을 구하시오\n# ### 단, 소수점 첫째자리까지 구하시오 (둘째자리에서 반올림)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-12-02T13:42:58.457824Z\",\"iopub.execute_input\":\"2021-12-02T13:42:58.458244Z\",\"iopub.status.idle\":\"2021-12-02T13:42:58.48298Z\",\"shell.execute_reply.started\":\"2021-12-02T13:42:58.458213Z\",\"shell.execute_reply\":\"2021-12-02T13:42:58.481923Z\"}}\n# 데이터\n\ndf = pd.read_csv(\"../input/bigdatacertificationkr/basic1.csv\")\n# df.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-12-02T13:42:59.356332Z\",\"iopub.execute_input\":\"2021-12-02T13:42:59.356707Z\",\"iopub.status.idle\":\"2021-12-02T13:42:59.363935Z\",\"shell.execute_reply.started\":\"2021-12-02T13:42:59.356669Z\",\"shell.execute_reply\":\"2021-12-02T13:42:59.362907Z\"}}\ntmp = int(len(df) * 0.5)\na = df[:tmp]\nb = df[tmp:]\nmed = a.f1.median()\nmaximum = b.f1.max()\na.f1 = a.f1.fillna(value = med)\nb.f1 = b.f1.fillna(value = maximum)\n\n\n\n\nanswer = a.f1.std() + b.f1.std()\n\nprint(np.round(answer,1))\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-12-02T13:43:00.473601Z\",\"iopub.execute_input\":\"2021-12-02T13:43:00.474405Z\",\"iopub.status.idle\":\"2021-12-02T13:43:00.480258Z\",\"shell.execute_reply.started\":\"2021-12-02T13:43:00.474345Z\",\"shell.execute_reply\":\"2021-12-02T13:43:00.479675Z\"}}\n# 데이터를 순서대로 50:50 으로 나누기\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-12-02T13:43:01.359341Z\",\"iopub.execute_input\":\"2021-12-02T13:43:01.359662Z\",\"iopub.status.idle\":\"2021-12-02T13:43:01.370762Z\",\"shell.execute_reply.started\":\"2021-12-02T13:43:01.359631Z\",\"shell.execute_reply\":\"2021-12-02T13:43:01.369868Z\"}}\n# 결측치 채우기\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-12-02T13:43:02.543125Z\",\"iopub.execute_input\":\"2021-12-02T13:43:02.543768Z\",\"iopub.status.idle\":\"2021-12-02T13:43:02.551222Z\",\"shell.execute_reply.started\":\"2021-12-02T13:43:02.543698Z\",\"shell.execute_reply\":\"2021-12-02T13:43:02.550241Z\"}}\n# A 표준편차 확인\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-12-02T13:43:03.413505Z\",\"iopub.execute_input\":\"2021-12-02T13:43:03.414694Z\",\"iopub.status.idle\":\"2021-12-02T13:43:03.421509Z\",\"shell.execute_reply.started\":\"2021-12-02T13:43:03.414649Z\",\"shell.execute_reply\":\"2021-12-02T13:43:03.420623Z\"}}\n# B 표준편차 확인\n\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-12-02T13:43:04.588471Z\",\"iopub.execute_input\":\"2021-12-02T13:43:04.589562Z\",\"iopub.status.idle\":\"2021-12-02T13:43:04.595801Z\",\"shell.execute_reply.started\":\"2021-12-02T13:43:04.589503Z\",\"shell.execute_reply\":\"2021-12-02T13:43:04.59482Z\"}}\n# 결과 출력\n\n# %% [markdown]\n# ## 2. 'f4'컬럼을 기준 내림차순 정렬과 'f5'컬럼기준 오름차순 정렬을 순서대로 다중 조건 정렬하고나서 \n#앞에서부터 10개의 데이터 중 'f5'컬럼의 최소값 찾고, \n#이 최소값으로 앞에서 부터 10개의 'f5'컬럼 데이터를 변경함. 그리고 'f5'컬럼의 평균값을 계산함\n# ### 단 소수점 둘째자리까지 출력(셋째자리에서 반올림)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-12-02T13:43:40.55614Z\",\"iopub.execute_input\":\"2021-12-02T13:43:40.556444Z\",\"iopub.status.idle\":\"2021-12-02T13:43:40.578757Z\",\"shell.execute_reply.started\":\"2021-12-02T13:43:40.556413Z\",\"shell.execute_reply\":\"2021-12-02T13:43:40.577668Z\"}}\n# 데이터\n\ndf = pd.read_csv(\"../input/bigdatacertificationkr/basic1.csv\")\n# df.head()\nimport numpy as np\ndf = df.sort_values(['f4', 'f5'], ascending = [False, True]).reset_index(drop = True)\ndf['f5'][:10] = df['f5'][:10].min()\nprint(np.round(df.f5.mean(),2))\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-12-02T13:43:41.024185Z\",\"iopub.execute_input\":\"2021-12-02T13:43:41.0245Z\",\"iopub.status.idle\":\"2021-12-02T13:43:41.052483Z\",\"shell.execute_reply.started\":\"2021-12-02T13:43:41.024467Z\",\"shell.execute_reply\":\"2021-12-02T13:43:41.051629Z\"}}\n# 'f4' 컬럼 내림차순, 'f5' 컬럼 오름차순\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-12-02T13:44:22.358162Z\",\"iopub.execute_input\":\"2021-12-02T13:44:22.35888Z\",\"iopub.status.idle\":\"2021-12-02T13:44:22.367421Z\",\"shell.execute_reply.started\":\"2021-12-02T13:44:22.358818Z\",\"shell.execute_reply\":\"2021-12-02T13:44:22.366194Z\"}}\n# 최소값으로 변경\n\n\n# %% [markdown]\n# ## 3. 'age' 컬럼의 IQR방식을 이용한 이상치 수와 표준편차*1.5방식을 이용한 이상치 수 합을 구하시오\n# - IQR방식 : Q1 - 1.5 * IQR, Q3 + 1.5 * IQR(q3 - q1)에서 벗어나는 영역을 이상치라고 판단함 (Q1은 데이터의 25%, Q3는 데이터의 75% 지점임)\n# - 표준편차*1.5방식: 평균으로부터 '표준편차*1.5'를 벗어나는 영역을 이상치라고 판단함\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-12-02T13:44:26.936914Z\",\"iopub.execute_input\":\"2021-12-02T13:44:26.937871Z\",\"iopub.status.idle\":\"2021-12-02T13:44:26.949525Z\",\"shell.execute_reply.started\":\"2021-12-02T13:44:26.93781Z\",\"shell.execute_reply\":\"2021-12-02T13:44:26.948481Z\"}}\n# IQR 방식 기준점\nq1 = np.percentile(df.age, 25)\nq3 = np.percentile(df.age, 75)\niqr = 1.5 * (q3 - q1)\n# print(iqr)\ndf_iqr = len(df[(df['age'] > q3 + iqr) | (df['age'] < q1 - iqr)].index)\n\n\nstd = df.age.std()*1.5\nmean = df.age.mean()\n\ndf_std = len(df[(df['age'] > mean + std) | (df['age'] < mean - std)].index)\nprint(df_iqr+df_std)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-12-02T13:44:27.69964Z\",\"iopub.execute_input\":\"2021-12-02T13:44:27.700798Z\",\"iopub.status.idle\":\"2021-12-02T13:44:27.709249Z\",\"shell.execute_reply.started\":\"2021-12-02T13:44:27.70074Z\",\"shell.execute_reply\":\"2021-12-02T13:44:27.708199Z\"}}\n# 표준편차*1.5 방식 기준점\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-12-02T13:44:28.308113Z\",\"iopub.execute_input\":\"2021-12-02T13:44:28.308925Z\",\"iopub.status.idle\":\"2021-12-02T13:44:28.316239Z\",\"shell.execute_reply.started\":\"2021-12-02T13:44:28.308878Z\",\"shell.execute_reply\":\"2021-12-02T13:44:28.315492Z\"}}\n# 표준편차*1.5 방식 기준\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-12-02T13:44:28.79998Z\",\"iopub.execute_input\":\"2021-12-02T13:44:28.800334Z\",\"iopub.status.idle\":\"2021-12-02T13:44:28.808183Z\",\"shell.execute_reply.started\":\"2021-12-02T13:44:28.8003Z\",\"shell.execute_reply\":\"2021-12-02T13:44:28.807171Z\"}}\n# IQR방식 기준\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2021-12-02T13:44:30.067191Z\",\"iopub.execute_input\":\"2021-12-02T13:44:30.067514Z\",\"iopub.status.idle\":\"2021-12-02T13:44:30.073193Z\",\"shell.execute_reply.started\":\"2021-12-02T13:44:30.067482Z\",\"shell.execute_reply\":\"2021-12-02T13:44:30.072394Z\"}}\n# 결과\n\n\n# %% [code]\n","metadata":{"collapsed":false,"_kg_hide-input":false,"jupyter":{"outputs_hidden":false}},"execution_count":null,"outputs":[]}]}